---
title: "R Packages and Engineering Workflow"
subtitle: "Good Software Engineering Practices"
format:
  revealjs: 
    slide-number: true
---

## Most of us use packages

- Packages help us load optional code, data, and documentation
- A library is a directory into which packages are installed
- `install.packages()` is used to install packages into the library
- `library()` is used to load and attach packages from the library
- Remember that **package $\neq$ library**

## Review: How is a Package Structured?

Package source = directory with files and subdirectories

::: columns
::: {.column width="50%"}
- Mandatory:
  - DESCRIPTION
  - NAMESPACE
  - R
  - man
:::

::: {.column width="50%"}
- Typically also includes:
  - data
  - inst
  - src
  - tests
  - vignettes
  - NEWS
:::
:::

## What is a good workflow?

## Typical work steps

::: incremental
::: columns
::: {.column width="55%"}
1.  Idea
2.  Concept creation
3.  Validation planning
4.  Specification:
      a. User Requirements Spec (URS), 
      b. Functional Spec (FS), and 
      c. Software Design Spec (SDS)
:::

::: {.column width="45%"}
5.  R package programming
6.  Documented verification
7.  Completion of formal validation
8.  R package release
9.  Use in production
10. Maintenance
:::
:::
:::

## But we all know it's not this clean...


## Frequently Used Workflow in Practice

::: incremental
::: columns
::: {.column width="50%"}
1.  Idea
2.  R package programming
3.  Use in production
4.  Bug fixing
5.  Use in production
:::

::: {.column width="50%"}
6.  Bug fixing + Documentation
7.  Use in production
8.  Bug fixing + Further development
9.  Use in production
10. Bug fixing + ...
:::
:::
:::





